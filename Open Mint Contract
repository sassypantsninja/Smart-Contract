// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract OpenMint is Ownable {
    event TokenMinted(address indexed owner, uint256 amount);

    // Constructor parameters
    string public name;
    string public symbol;
    uint8 public decimals;
    uint256 public maxSupply;

    constructor(
        string memory _name,
        string memory _symbol,
        uint8 _decimals,
        uint256 _maxSupply
    ) {
        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        maxSupply = _maxSupply;
    }

    // Mint tokens
    function mint(uint256 amount) external {
        require(totalSupply() + amount <= maxSupply, "Exceeds maximum supply");
        _mint(msg.sender, amount);
        emit TokenMinted(msg.sender, amount);
    }
}
