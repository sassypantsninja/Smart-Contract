// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract SelfDestruct {
    address public owner;

    event ContractDestroyed(address indexed owner, uint256 balanceTransferred);

    modifier onlyOwner() {
        require(msg.sender == owner, "Not the contract owner");
        _;
    }

    constructor() {
        owner = msg.sender;
    }

    // Function to receive Ether. 
    receive() external payable {}

    // Function to self-destruct the contract and transfer remaining Ether to the owner
    function destroy() external onlyOwner {
        emit ContractDestroyed(owner, address(this).balance);
        selfdestruct(payable(owner));
    }
}
