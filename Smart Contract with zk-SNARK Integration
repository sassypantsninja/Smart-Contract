// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/utils/math/SafeMath.sol";
import "./Verifier.sol";  // Import the verifier contract generated by ZoKrates

contract ZkSnarkIntegration is Ownable {
    using SafeMath for uint256;

    Verifier public verifierContract;

    event ProofVerified(bool success, address verifier);

    constructor(address _verifierAddress) {
        verifierContract = Verifier(_verifierAddress);
    }

    function verifyProof(
        uint[2] memory a,
        uint[2][2] memory b,
        uint[2] memory c,
        uint[1] memory input
    ) public returns (bool) {
        bool result = verifierContract.verifyProof(a, b, c, input);
        emit ProofVerified(result, msg.sender);
        return result;
    }
}
